import fs from "fs/promises";
import Head from "next/head";
import styles from "../styles/Home.module.scss";
import Table from "../Components/Table";

const columns = [
  {
    title: "File Name",
    accessor: "name",
    tooltipAccessor: "time",
  },
  {
    title: "File Path",
    accessor: "path",
  },
];

function Home({ files = [] }) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Demo App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Table columns={columns} data={files} />
      </main>
    </div>
  );
}

export default Home;

export const getServerSideProps = async () => {
  const dir = "/Users/vijay/Downloads";
  let files = [];

  const listAllFilesAndDirs = async (items, currentPath) => {
    await Promise.all(
      items.map(async (dirent) => {
        const { name } = dirent;
        if (dirent.isDirectory()) {
          return readDir(`${currentPath}/${name}`);
        }
        const state = await fs.stat(dir + "/" + name);
        files.push({
          name: name,
          time: state.mtime.getTime(),
          path: `${currentPath}/${name}`,
        });
      }),
    );
    return files;
  };

  const readDir = async (path) => {
    const items = await fs.readdir(path, {
      withFileTypes: true,
    });
    await listAllFilesAndDirs(items, path);
  };

  await readDir(dir);

  const currentDate = new Date();
  const sevenDaysAgoTimeStamp = currentDate.setDate(currentDate.getDate() - 7);

  files = files.filter((file) => {
    const modifiedAt = new Date(file.time).getTime();
    return modifiedAt >= sevenDaysAgoTimeStamp;
  });

  files = files.map((file) => {
    const formattedDateTime = new Intl.DateTimeFormat("en-GB", {
      dateStyle: "full",
      timeStyle: "medium",
    }).format(file.time);
    file.time = formattedDateTime;
    return file;
  });

  return {
    props: {
      files: JSON.parse(JSON.stringify(files)),
    },
  };
};
